(* 基础结构 *)
program = { import_decl | statement } ;

import_decl = "import", file_path ;

(* 语句（统一 _stmt 后缀） *)
statement = if_stmt
          | while_stmt
          | jump_stmt
          | label_decl
          | dialogue_stmt
          | call_stmt
          | menu_stmt
          | assignment_stmt ;

(* 控制流 *)
if_stmt = "if", expression, ":", block, [ "else", ":", block ] ;
while_stmt = "while", expression, ":", block ;
jump_stmt = "jump", identifier ;
label_decl = "label", identifier, ":" ;

(* 对话与调用 *)
dialogue_stmt = [ "sync" ], [ speaker ], quoted_string, [ "with", tags ] ;
call_stmt = [ "sync" ], call_command, { " ", literal | variable }, { " ", call_arg_key } ;
menu_stmt = "menu", ":", [ dialogue_stmt ], { menu_item } ;
menu_item = quoted_string, ":", block ;

(* 赋值与表达式 *)
assignment_stmt = variable, "=", expression ;
expression = logical_and, { "||", logical_and } ;
logical_and = equality, { "&&", equality } ;
equality = comparison, { ("==" | "!="), comparison } ;
comparison = term, { (">" | "<" | ">=" | "<="), term } ;
term = factor, { ("+" | "-"), factor } ;
factor = unary, { ("*" | "/"), unary } ;
unary = [ ("+" | "-" | "!") ], primary ;
primary = variable | number | boolean | quoted_string | "(", expression, ")" ;

(* 块结构 *)
block = { statement } ;  (* 实际缩进由词法分析器处理 *)

(* 词法元素 *)
variable = "$", identifier, { ".", identifier } ;
literal = number | boolean | quoted_string ;
quoted_string = '"', { ? any_char_except_unescaped_quote ? }, '"' ;
file_path = identifier, { ".", identifier } ;
identifier = letter, { letter | digit | "_" } ;
number = [ "-" ], digit, { digit }, [ ".", digit, { digit } ] ;
boolean = "true" | "false" ;
call_command = ("call" " ", identifier) | "play" | "hide" | "show" | "wait" ;

(* 参数与标签（严格空格分隔，禁止 = 周围空格） *)
call_arg_key = identifier "=" (expression | literal | variable) ;
tags = (identifier | quoted_string), { " ", (identifier | quoted_string) } ;
speaker = identifier ;

(* 字符集 *)
letter = "a".."z" | "A".."Z" ;
digit = "0".."9" ;